<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Separator" Id="{91946f14-5ef9-4883-993a-962cda20c177}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Separator
VAR_INPUT
	bEnable : BOOL; 	// start/stops the functionblock
	bExecute: BOOL; 	// Ejects 1 flask if true
	bErrorReset: BOOL;	//Reset Error 
	
	bSensor1 : BOOL; //Hardware Sensor 1	-> Zwischen Schieber
	bSensor2 : BOOL; //Hardware Sensor 2	-> Uber Schieber 
	bSensor3 : BOOL; //Hardware Sensor 3	-> Lager
END_VAR
VAR_OUTPUT
	bR1AKT1 : BOOL; //Relais 1 Aktor 1 (Schieber oben) 	-> Schliessen
	bR2AKT1 : BOOL; //Relais 2 Aktor 1					-> Offen
	bR1AKT2 : BOOL; //Relais 1 Aktor 2 (Schieber unten)	-> Offen
	bR2AKT2 : BOOL; //Relais 2 Aktor 2					-> Schließen
	
	bNoBottle		: BOOL;		//Keine Flasche vorhanden
	bWrongBottle	: BOOL; //Falsche oder gedrehte Flasche vorhanden
	
	eStatus : State := State.Off;
END_VAR
VAR
	timer : TON; //Timer to make sure, that the flask has cleared the slope
	eState : StateSeparator := StateSeparator.Off;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eState OF
StateSeparator.Off:
	eStatus := State.Off;
	bR1AKT1 := TRUE;	//Eingefahren oben
	bR2AKT1 := FALSE;	//Eingefahren oben
	
	bR1AKT2 := FALSE;	//Eingefahren unten
	bR2AKT2 := TRUE;	//Eingefahren unten

	IF bEnable	THEN
		eState := StateSeparator.Init;
	END_IF
	
StateSeparator.Init:
	
	eStatus := State.Busy; //Beschaeftigt Signallampe

	bR1AKT1 := FALSE; //Ausgefahren oben
	bR2AKT1 := TRUE;
	
	bR1AKT2 := FALSE; //Eingefahren unten
	bR2AKT2 := TRUE;

	
	IF bSensor1 THEN
		eState := StateSeparator.Init_Wait;	//Zustandswechsel sobald Sensor Flasche zwischen Schiebern sieht
	END_IF	
	
StateSeparator.Init_Wait:
	timer(IN := TRUE, PT := T#1000MS); //Timer wartet bis Flasche sicher zum Stehen kommt
	
	IF timer.Q THEN
		timer(IN := FALSE);
		eState := StateSeparator.Ready; //Zustand Ready nach Timer
	END_IF
	
StateSeparator.Ready:
	eStatus := State.Ready; //Zustand Ready Signallampe

	bR1AKT1 := TRUE;	//Eingefahren oben
	bR2AKT1 := FALSE;	//Eingefahren oben
	
	bR1AKT2 := FALSE;	//Eingefahren unten
	bR2AKT2 := TRUE;	//Eingefahren unten
	
	IF bExecute THEN
		eState := StateSeparator.Eject_Wait_1; //Auswerfen sobald Exceute TRUE
	END_IF

StateSeparator.Eject_Wait_1:	// Warten bis Schieber oben ganz geschlossen ist
		eStatus := State.Busy; //Zustand Busy Signallampe
	
		timer(IN := TRUE, PT := T#2500MS); //Timer auf 2,5 S eingestellt
	
	IF timer.Q THEN
		timer(IN := FALSE);
		eState := StateSeparator.Eject; //Zustand bereit nach Timer
	END_IF
	
StateSeparator.Eject:	//Auswerfen der unteren Flasche
	bR1AKT2 := TRUE;	//Lässt Flaschen auf Band ab durch Öffnen des unteren Schiebers
	bR2AKT2 := FALSE;
	
	IF NOT bSensor1 THEN
		eState := StateSeparator.Eject_Wait_2; 
	END_IF
	
StateSeparator.Eject_Wait_2:	// Warten bis Flasche durch Förderband weit genug von Schieber wegtransportiert
	eStatus := State.Done;
	timer(IN := TRUE, PT := T#4000MS); //Timer auf 4 S eingestellt
	
	IF timer.Q THEN
		timer(IN := FALSE);
		eState := StateSeparator.Done_Wait; 
	END_IF 
	
StateSeparator.Done_Wait: // Schließen des unteren Schiebers und Warten bis komplettt geschlossen
	bR1AKT2 := FALSE;	//Eingefahren unten
	bR2AKT2 := TRUE;	//Eingefahren unten
	
	timer(IN := TRUE, PT := T#3000MS); //Timer wartet bis Schieber geschlossen ist
	
	IF timer.Q THEN
		timer(IN := FALSE);
		eState := StateSeparator.Done; 
	END_IF	
	
StateSeparator.Done:	//Vereinzelungsvorgang abgeschlossen
	
	IF NOT bExecute THEN
		eState := StateSeparator.Init;
	END_IF

END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_Separator">
      <LineId Id="9" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="2" />
      <LineId Id="423" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="30" Count="1" />
      <LineId Id="33" Count="1" />
      <LineId Id="91" Count="1" />
      <LineId Id="200" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="42" Count="13" />
      <LineId Id="120" Count="0" />
      <LineId Id="425" Count="2" />
      <LineId Id="482" Count="0" />
      <LineId Id="58" Count="4" />
      <LineId Id="363" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="165" Count="1" />
      <LineId Id="224" Count="2" />
      <LineId Id="223" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="174" Count="1" />
      <LineId Id="171" Count="0" />
      <LineId Id="70" Count="2" />
      <LineId Id="491" Count="0" />
      <LineId Id="485" Count="1" />
      <LineId Id="492" Count="0" />
      <LineId Id="487" Count="3" />
      <LineId Id="484" Count="0" />
      <LineId Id="454" Count="0" />
      <LineId Id="456" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="462" Count="6" />
      <LineId Id="455" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="273" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="277" Count="1" />
      <LineId Id="276" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="24" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>